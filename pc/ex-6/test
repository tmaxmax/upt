#!/usr/bin/env zsh

num_attempts=${1:-50}

function print_results () {
    touch "$2"
    len_paths=$3
    atts=${4:-$num_attempts}
    for (( j = 1; j <= $atts; j++ )); do
        for (( i = 0; i < $len_paths; i++ )); do
            (( index = j + i * $atts ))
            echo -n "${(P)${1}[$index]}" >> "$2"
            let "comma_idx = $len_paths - 1"
            if [ $i -ne $comma_idx ]; then
                echo -n "," >> "$2"
            fi
        done
        echo >> "$2"
    done
}

sample_sizes=(`find tests -name "*.in" | sed -e "s/^tests\\/s//" -e "s/-n.*$//" | sort -u`)

rm results/*.out.csv

for sample_size in "${sample_sizes[@]}"; do
    paths=(`find tests -name "s${sample_size}-*.in" | sort`)

    for exec in output/*.out; do
        exec_name=${exec#output/}
        exec_name=${exec_name%.out}
        echo "Testing ${exec_name}..."

        declare -a timings=()
        declare -a mem=()

        for file in $paths; do
            file_name=${file#tests/}
            file_name=${file_name%.in}
            echo -n "- $file_name"

            $exec < $file >/dev/null 2>/dev/null
            for (( i = 1; i <= $num_attempts; i++ )); do
                output=(`$exec < $file 2>&1 >/dev/null`)
                timings+=(${output[1]})
                mem+=(${output[2]})
            done

            echo " [done]"
        done

        echo "Writing files..."

        print_results "timings" "results/s${sample_size}-${exec_name}.out.csv" ${#paths[@]}
        print_results "mem" "results/s${sample_size}-${exec_name}.mem.out.csv" ${#paths[@]}

        echo
    done
done
